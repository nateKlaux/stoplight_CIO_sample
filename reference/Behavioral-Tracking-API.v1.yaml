openapi: 3.0.0
info:
  title: Behavioral Tracking API
  description: 'Our Behavioral Tracking API is used to identify and track customer data with Customer.io. You can add and delete customers and their devices, supress and unsupress customers, as well as manage events and segments (manually added customers from GUI interface). Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the `Behavioral Tracking API` only. `BETA API` integration will be available soon. This sample authorizes using my demo tracking API keys.<br/><br/> **Note**: `id` parameter is required for all endpoints.'
  version: '1.0'
  termsOfService: 'https://customer.io/legal/terms-of-service/'
  contact:
    name: Customer.io
    url: 'https://customer.io/contact/'
    email: support@customer.io.com
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: 'https://customer.io/pricing/'
servers:
  - url: 'https://track.customer.io/api/v1'
    description: Behavioral Tracking API
paths:
  '/customers/{id}':
    parameters:
      - schema:
          type: string
          default: '6'
          example: Thomas
        name: id
        in: path
        required: true
        description: 'The `id` Attribute is the only Attribute that is required per Person and **it cannot be changed once it has been set.** The `id` Attribute must be unique for every profile because it is what we use to differentiate each Person in your Workspace. We do not use their other contact information (i.e., their email address or phone number) for that purpose. This means multiple profiles can have the same email address, phone number.'
    put:
      summary: Create or update a Person
      operationId: put-customer
      parameters:
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          required: true
      description: |-
        Create or update a customer.

        Creating or updating customers via the Behavioral Tracking API accomplishes the same goal as the `identify` method in the Javascript snippet. It allows you to pass attributes of your customers to us which you can then use to personalized your triggered emails or affect the logic of who receives them. 

        <!-- theme: warning -->
        > There is a limit of 300 unique attributes set per identify call.

        ## Updating or removing attributes
        You can also update a customer’s attributes after creating them, using the same `PUT` API call. Don’t worry about sending only the attributes which have changed, our API takes care of that for you.


        > To remove an attribute on an existing customer, set its value to an empty string.
      responses: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/email'
                created_at:
                  $ref: '#/components/schemas/created_at'
                attributes:
                  $ref: '#/components/schemas/attributes'
              required:
                - email
        description: ''
    delete:
      summary: Delete
      operationId: delete-customer
      responses:
        '200':
          description: OK
      description: |-
        Delete a customer. 

        Deleting a customer will remove them, and all their information from Customer.io.

        **Note**: If you’re still sending data to Customer.io via other means (such as the Javascript snippet), the customer could be recreated.

        **This action is not available with the Javascript snippet alone.**
  '/customers/{id}/devices':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Create or update a customer device
      tags:
        - Device
        - Delete customer device
      responses: {}
      operationId: put-customers-id-devices
    delete:
      summary: Delete a customer device
      tags:
        - Device
        - Delete customer device
      responses: {}
      operationId: delete-customers-id-devices
  '/customers/{id}/suppress':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Supress a customer
      tags: []
      responses: {}
      operationId: post-customers-id-suppress
  '/customers/{id}/unsuppress':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Unsupress a customer
      tags:
        - unsuppress
        - unsuppress a customer
      responses: {}
      operationId: post-customers-id-unsuppress
components:
  schemas:
    email:
      type: string
      title: email
      description: '**Recomended**: The email address of the user.'
      default: nathan.k.laux@gmail.com
      example: cool_email@host.com
    created_at:
      type: integer
      title: created_at
      description: |-
        **Recommended**: The UNIX timestamp from when the user was created in your system.

        This
      default: 1598656835
      example: 1598656835
    first_name:
      type: string
      title: first_name
      description: The first name of the Person.
      default: enter_name
      example: Bobby
    attributes:
      anyOf:
        - default: First Name
          description: First Name
          example: Bobby
        - description: Type of Plan
          example: plan=Basic
          default: 'plan={plan}'
      description: Properties stored per Person in your account.
      type: string
  securitySchemes: {}
