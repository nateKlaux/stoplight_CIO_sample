openapi: 3.0.0
info:
  title: Behavioral Tracking API
  description: |-
    ## Resource Description

    Our **Behavioral Tracking API** is used to identify and track Person (customer) data with Customer.io. You can add, update, or delete Person, as well as their devices. You can also use the API to supress and unsupress Persons, manage events and segments (segments are manually added customers from GUI interface). Data is available in JSON, XML, or HTML format. **Note**: This sample Spotlight file covers the `Behavioral Tracking API` only. `API` and `BETA API` integration with Spotlight will be available soon. <br/>

    ## Authentication
    <!-- theme: warning --> 
    > This sample uses my personal Customer.io demo tracking API keys. They are set to eventually expire. 

    All requests to the Customer.io API must be authenticated using a Tracking API Key over HTTP Basic Auth.

    To authenticate, provide your Site ID as the username, and your secret API key as the password. You can find these values by visiting the Tracking API Keys page directly, or by clicking the Integrations link in the left-hand menu of your Customer.io account and choosing Customer.io API > Manage API Credentials > Tracking API Keys.
    <!-- theme: danger -->
    > Nothing will work unless you include both your Site ID and your API Key

    <br/>**Note**: The `id` parameter is required for all endpoints.
  version: '1.0'
  termsOfService: 'https://customer.io/legal/terms-of-service/'
  contact:
    name: Customer.io
    url: 'https://customer.io/contact/'
    email: support@customer.io.com
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: 'https://customer.io/pricing/'
servers:
  - url: 'https://track.customer.io/api/v1'
    description: Behavioral Tracking API
paths:
  /customers/id:
    parameters: []
    put:
      summary: Create or update a Person
      operationId: create-Person
      parameters:
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          required: true
      description: |-
        Create or update a Person.

        Creating or updating customers via the Behavioral Tracking API accomplishes the same goal as the `identify` method in the Javascript snippet. It allows you to pass attributes of your customers to us which you can then use to personalized your triggered emails or affect the logic of who receives them. 

        <!-- theme: warning -->
        > There is a limit of 300 unique attributes set per identify call.

        ## Updating or removing attributes
        You can also update a customer’s attributes after creating them, using the same `PUT` API call. Don’t worry about sending only the attributes which have changed, our API takes care of that for you.


        > To remove an attribute on an existing customer, set its value to an empty string.
      responses: {}
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/email'
                created_at:
                  $ref: '#/components/schemas/created_at'
                attributes:
                  $ref: '#/components/schemas/attributes'
              required:
                - email
        description: ''
      tags:
        - Create and Delete a Person
    delete:
      summary: Delete
      operationId: delete-Person
      responses:
        '200':
          description: OK
      description: |-
        Delete a Person. 

        Deleting a Pustomer will remove them, and all their information from Customer.io.

        **Note**: If you’re still sending data to Customer.io via other means (such as the Javascript snippet), the customer could be recreated.

        **This action is not available with the Javascript snippet alone.**
      tags:
        - Create and Delete a Person
  '/customers/{id}/devices':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    put:
      summary: Create or update a customer device
      responses: {}
      operationId: put-Persons-id-devices
      description: Create or update a Person's device.
      tags:
        - Create and Delete a Person's Device
    delete:
      summary: Delete a customer device
      responses: {}
      operationId: delete-Persons-id-devices
      tags:
        - Create and Delete a Person's Device
      description: Delete a Persons's device.
  '/customers/{id}/suppress':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Supress a Person
      responses: {}
      operationId: post-Persons-id-suppress
      tags:
        - Supress a Person
      description: Supress a Person.
  '/customers/{id}/unsuppress':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Unsupress a Person
      responses: {}
      operationId: post-Persons-id-unsuppress
      tags:
        - Unsupress a Person
      description: Unsupress a Person.
components:
  schemas:
    email:
      type: string
      title: email
      description: '**Recomended**: The email address of the user.'
      default: nathan.k.laux@gmail.com
      example: cool_email@host.com
    created_at:
      type: integer
      title: created_at
      description: |-
        **Recommended**: The UNIX timestamp from when the user was created in your system.

        This
      default: 1598656835
      example: 1598656835
    first_name:
      type: string
      title: first_name
      description: The first name of the Person.
      default: enter_name
      example: Bobby
    attributes:
      anyOf:
        - default: First Name
          description: First Name
          example: Bobby
        - description: Type of Plan
          example: plan=Basic
          default: 'plan={plan}'
      description: Properties stored per Person in your account.
      type: string
  securitySchemes: {}
tags:
  - name: Create and Delete a Person
  - name: Create and Delete a Person's Device
  - name: Supress a Person
  - name: Unsupress a Person
