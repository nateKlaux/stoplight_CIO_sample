openapi: 3.0.1
info:
  title: Behavioral Tracking API
  description: |-
    ## Resource Description

    The **Behavioral Tracking API** is used to identify and track customer data with Customer.io. With it, you can add, update, and delete customers and their devices. You can also suppress/unsuppress customers as well as manage events and segments. (Segments are manually-added customers from the GUI interface.) Data is available in JSON, XML, or HTML format. <br><br/> **Note**: This sample is a reworking of Customer.io's Behavioral Tracking API into an OpenAPI Spec definition.

    ## Authentication
    All requests to the **Behavioral Tracking API** must be authenticated using a Tracking API Key over HTTP Basic Auth.

    To authenticate, provide your Site ID as the username, and your secret API key as the password. You can find these values by visiting the Tracking API Keys page directly, or by clicking the Integrations link in the left-hand menu of your Customer.io account and choosing Customer.io API > Manage API Credentials > Tracking API Keys.
    <!-- theme: danger -->
    > Nothing will work unless you include both your Site ID and your API Key

    <!-- theme: warning -->
    >
    > Because this sample defaults to my personal API keys, be sure to replace my Base64 encoded `Site_ID:API_Key` with your own in the authentiction header **or** replace the authentication header altogether with the following cURL call: <br/>
    > `-u Site_ID:API_Key`

    <br/>**Note**: The `id` parameter is required for all endpoints.
  version: '1.0'
  termsOfService: 'https://customer.io/legal/terms-of-service/'
  contact:
    name: Customer.io
    url: 'https://customer.io/contact/'
    email: support@customer.io.com
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: 'https://customer.io/pricing/'
servers:
  - url: 'https://track.customer.io/api/v1'
paths:
  '/customers/{id}':
    parameters:
      - schema:
          type: string
          default: '6'
        name: id
        in: path
        required: true
        description: The unique identifier for the customer. **Be sure to replace this value in the "Try It" section.**
    put:
      summary: Create or update a Person
      operationId: create-Person
      parameters:
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
          description: This header defines the bodyRequest parameters.
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          required: true
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
      description: |-
        Create or update a Person.

        Creating or updating customers via the Behavioral Tracking API accomplishes the same goal as the `identify` method in the Javascript snippet. It allows you to pass attributes of your customers to us which you can then use to personalized your triggered emails or affect the logic of who receives them. 

        <!-- theme: warning -->
        > There is a limit of 300 unique attributes set per identify call.

        ## Updating or removing attributes
        You can also update a customer’s attributes after creating them, using the same `PUT` API call. Don’t worry about sending only the attributes which have changed, our API takes care of that for you.


        > To remove an attribute on an existing customer, set its value to an empty string.
      responses:
        '200':
          description: OK
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  $ref: '#/components/schemas/email'
                created_at:
                  $ref: '#/components/schemas/created_at'
                attributes:
                  $ref: '#/components/schemas/attributes'
              required:
                - email
        description: ''
      tags:
        - Create and Delete a Person
        - Customers
    delete:
      summary: Delete a Person
      operationId: delete-Person
      description: |-
        Delete a Person. 

        Deleting a Pustomer will remove them, and all their information from Customer.io.

        **Note**: If you’re still sending data to Customer.io via other means (such as the Javascript snippet), the customer could be recreated.
        <!-- theme: danger -->

        >
        > **This action is not available with the Javascript snippet alone.**
      tags:
        - Create and Delete a Person
      parameters:
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
          description: This header defines the bodyRequest parameters.
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          required: true
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
      responses:
        '200':
          description: OK
  '/customers/{id}/devices':
    parameters:
      - schema:
          type: string
          default: '6'
        name: id
        in: path
        required: true
        description: The unique identifier for the customer. **Be sure to replace this value in the "Try It" section.**
    put:
      summary: Create or update a Person's device
      responses:
        '200':
          description: OK
      operationId: put-Persons-id-devices
      description: Create or update a Person's device.
      tags:
        - Create and Delete a Person's Device
        - Customers
      parameters:
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
          description: This header defines the bodyRequest parameters.
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          required: true
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                'device[id]':
                  $ref: '#/components/schemas/device_id'
                'device[platform]':
                  $ref: '#/components/schemas/platform'
                'device[last_used]':
                  $ref: '#/components/schemas/last_used'
              required:
                - 'device[id]'
                - 'device[platform]'
        description: To identify mobile devices for use in Push messaging you need to form a `PUT` call to the `devices` endpoint for a given customer.
  '/customers/{id}/devices/{device_id}':
    parameters:
      - schema:
          type: string
          default: '6'
        name: id
        in: path
        required: true
        description: The unique identifier for the customer. **Be sure to replace this value in the "Try It" section.**
      - schema:
          type: string
          default: '1'
        name: device_id
        in: path
        required: true
        description: '    The unique token for the user device.'
    delete:
      summary: Delete a Person's device
      operationId: delete-Persons-id-devices
      responses:
        '200':
          description: OK
      description: |-
        Delete's a Persons's device. Deleting a mobile device will remove the device from a customer’s profile in Customer.io.

        <!-- theme: warning -->

        >
        > Note: if you’re still sending data about the device to Customer.io via your integration the device will be recreated.
      parameters:
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
          description: This header defines the bodyRequest parameters.
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          required: true
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
      tags:
        - Create and Delete a Person's Device
        - Customers
  '/customers/{id}/suppress':
    parameters:
      - schema:
          type: string
          default: '6'
        name: id
        in: path
        required: true
        description: The unique identifier for the customer. **Be sure to replace this value in the "Try It" section.**
    post:
      summary: Supress a Person
      responses:
        '200':
          description: OK
      operationId: post-Persons-id-suppress
      description: |-
        Supress a Person.

        To suppress a profile id in Customer.io from your server side code, you can `POST` to the suppress resource for a given profile ID. If we receive further API event/identify calls for the same profile ID, we’ll notice the id is suppressed and ignore the received API calls.

        In addition to suppressing the profile ID *we will also delete the user profile from Customer.io* the same way we would when calling the identify endpoint with the `DELETE` method.

        <!-- theme: danger -->

        >
        >WARNING: This API call will NOT add anyone’s email address to the global suppression list for your account. Instead, it will delete the user’s profile AND cause us to ignore future API calls that attempt to create a new profile with the same profile id. If you need to suppress deliveries for a particular *email address*, please reach out to our support team or your email admin.
      parameters:
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
          name: Authorization
          required: true
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
          description: This header defines the bodyRequest parameters.
      tags:
        - Supress and Unsupress a Person
        - Customers
  '/customers/{id}/unsuppress':
    parameters:
      - schema:
          type: string
          default: '6'
        name: id
        in: path
        required: true
        description: The unique identifier for the customer. **Be sure to replace this value in the "Try It" section.**
    post:
      summary: Unsupress a Person
      responses:
        '200':
          description: OK
      operationId: post-Persons-id-unsuppress
      description: |-
        Unsupress a Person.

        If you need to resume tracking a previously suppressed profile ID in Customer.io you can `POST` to the unsuppress resource for a previously suppressed profile ID.

        Following a call to unsuppress, identifies and events for a person will behave exactly as they would for a customer that we haven’t seen before. Identifying a person following an unsuppress will create an entirely new profile for them, with none of the history (messages, journeys, etc.) that might have existed for that ID prior to a suppress call.

        <!-- theme: danger -->
        >
        >**WARNING: This API call will NOT remove anyone’s email address from the global suppression list for your account.** Instead, it will reverse the effects of a SUPPRESS call (above) and cause us to allow future API calls that will create a new profile that uses a previously suppressed profile id. If you need to unsuppress deliveries for a particular *email address*, please reach out to our support team or your email admin.
      parameters:
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
          required: true
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
          description: This header defines the bodyRequest parameters.
      tags:
        - Supress and Unsupress a Person
        - Customers
  '/customers/{id}/events':
    parameters:
      - schema:
          type: string
          default: '6'
        name: id
        in: path
        required: true
        description: The unique identifier for the customer. **Be sure to replace this value in the "Try It" section.**
    post:
      summary: Track a Person's event
      tags:
        - Track an event
        - Events
      responses:
        '200':
          description: OK
      operationId: post-customers-id-events
      description: |-
        Track a Person's event.

        To send an event to Customer.io outside of the browser, say from your server side code, you can `POST` to the events resource for a given Person.

        #### Reserved Custom Data Parameters

        There are a few important values which, if sent with the events that trigger campaigns, will **override** those campaign settings. These are:

        1. Attachments
        2. `from_address`
        3. `recipient`
        4. `reply_to`

        <!-- theme: warning -->
        >
        >When using the Javascript snippet to track events you must call the Behavioral Tracking API call after previously identifying the user or else the event will not associate to the user’s profile.
      parameters:
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-Type
          required: true
          description: This header defines the bodyRequest parameters.
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          required: true
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/event_name'
                type:
                  $ref: '#/components/schemas/type'
                data:
                  $ref: '#/components/schemas/data'
              required:
                - name
        description: ''
  /events:
    post:
      summary: Track an anonymous event
      tags:
        - Track an event
        - Events
      responses:
        '200':
          description: OK
      operationId: post-events
      description: |-
        Anonymous events can also be sent to Customer.io by way of a `POST` to the events resource directly without a customer ID.
        #### Reserved Custom Data Parameters

        There are a few important values which, if sent with the events that trigger campaigns, will **override** those campaign settings. These are:

        1. `recipient`
        2. `from_address`
        3. `reply_to`

        The `recipient` event attribute is required if the anonymous event is used to trigger an email campaign.
        ### Use case

        You can use anonymous events to send invitation emails to people not yet in your Customer.io database.
      parameters:
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-Type
          description: This header defines the bodyRequest parameters.
          required: true
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                event_name:
                  $ref: '#/components/schemas/event_name'
                data:
                  $ref: '#/components/schemas/data'
              required:
                - event_name
  '/segments/{id}/add_customers':
    parameters:
      - schema:
          type: string
          default: '6'
        name: id
        in: path
        required: true
        description: The unique identifier for the customer. **Be sure to replace this value in the "Try It" section.**
    post:
      summary: Add People to a manual segment
      responses:
        '200':
          description: OK
      operationId: post-segments-id-add_customers
      parameters:
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          description: This header defines the bodyRequest parameters.
          required: true
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
          required: true
      description: |-
        Manual segments are segments that you control by sending requests to our Behavioral Tracking API or by uploading lists of customers in the Customer.io application. You can add people to a segment by sending an `add_customers request`, and remove them by sending a `remove_customers` request.

        <!-- theme: warning -->

        >
        >There is a limit of 1000 customer ids per request

        >If you send customer ids that don’t exist yet in an >add_customers request, we will automatically create customer >profiles for the new customer ids.

        <!-- theme: warning -->

        >
        >**NOTE: This API call is for use with manual segments only.** It will NOT add anyone to data-driven segments. Please visit our documentation on segments to learn more about these segment types.
      tags:
        - Add and Remove a Person from Segments
        - Segments
  '/segments/{id}/remove_customer':
    parameters:
      - schema:
          type: string
          default: '6'
        name: id
        in: path
        required: true
        description: The unique identifier for the customer. **Be sure to replace this value in the "Try It" section.**
    post:
      summary: Remove People from a manual segment
      responses:
        '200':
          description: OK
      operationId: post-segments-id-remove_customer
      parameters:
        - schema:
            type: string
            default: application/x-www-form-urlencoded
          in: header
          name: Content-Type
          required: true
          description: This header defines the bodyRequest parameters.
        - schema:
            type: string
            default: Basic MDc4ZjA5YjkyNGMxNTYxYTAwMzA6ZmEyNDY2YWE0NDYyNDBjNDNiMzE=
          in: header
          name: Authorization
          description: 'This string is your site_ID:API_key encoded in Base64. For results to appear in your dashboard, be sure to replace the string with your own encoded site_ID:API_key, or replace the authorization header itself with this curl call: `-u site_ID:API_KEY`.'
          required: true
      description: |-
        <!-- theme: warning -->

        >There is a limit of 1000 customer ids per request

        <!-- theme: warning -->

        >**NOTE: This API call is for use with manual segments only.** It will NOT remove anyone from data-driven segments. Please visit our documentation on segments to learn more about these segment types.
      tags:
        - Add and Remove a Person from Segments
        - Segments
components:
  schemas:
    email:
      type: string
      title: email
      description: '**Recomended**: The email address of the user.'
      default: nathan.k.laux@gmail.com
      example: cool_email@host.com
    created_at:
      type: integer
      title: created_at
      description: |-
        **Recommended**: The UNIX timestamp from when the user was created in your system.

        This
      default: 1598656835
      example: 1598656835
    first_name:
      type: string
      title: first_name
      description: The first name of the Person.
      default: enter_name
      example: Bobby
    attributes:
      anyOf:
        - default: First Name
          description: First Name
          example: Bobby
        - description: Type of Plan
          example: plan=Basic
          default: 'plan={plan}'
      description: Properties stored per Person in your account.
      type: string
    device_id:
      title: device_id
      type: string
      description: '    The unique token for the user device.'
    platform:
      type: string
      title: platform
      description: The platform for the user device. Allowed values are 'ios' and 'android'.
      default: my_ios_device_id
      example: Either 'ios' or 'android'
    last_used:
      type: number
      title: last_used
      description: UNIX timestamp representing the last used time for the device. If this is not included we default to the time of the device identify.
      default: 1514764800
    event_name:
      type: string
      title: event_name
      description: The name of the event to track.
      default: purchase
      example: Choose either Purchase or In Cart or Appropriate Value
    type:
      title: type
      type: string
      description: Used to change event type. For Page View events set to "page".
    data_price:
      type: array
      description: Custom data about price to include with the event.
      x-examples: {}
      title: 'data[price]'
      default: Appropriate Value
      example: 24.94
      items:
        type: number
        default: Appropriate Value
        example: 24
        format: double
    data_product:
      type: string
      title: 'data[product]'
      description: Custom data about price to include with the event.
      default: Appropriate Value
      example: shoes
    data_time-stamp:
      type: number
      title: data_time-stamp
      description: Custom data about UNIX epoch time to include with the event.
      default: Appropriate Value
      example: 1598725892
    data_recipient:
      type: string
      title: 'data[recipient]'
      description: Custom data about the recipient to include with the event.
      default: Appropriate Value
      example: gavin@hooli.com
      format: email
    data:
      title: data
      type: array
      items:
        anyOf:
          - properties:
              product:
                type: string
                description: Custom data about price to include with the event.
                example: shoes
              price:
                type: number
                description: Custom data about price to include with the event.
                example: 24.94
                format: float
              time_stamp:
                type: integer
                description: Custom data about UNIX epoch time to include with the event.
                example: 1598725892
              recipient:
                type: string
                description: Custom data about the recipient to include with the event.
                format: email
                example: gavin@hooli.com
        type: object
      description: 'Custom data about products, price, time stampls, and recipients. '
  securitySchemes: {}
tags:
  - name: Create and Delete a Person
  - name: Create and Delete a Person's Device
  - name: Track an event
  - name: Supress and Unsupress a Person
  - name: Add and Remove a Person from Segments
  - name: Customers
  - name: Events
  - name: Segments
